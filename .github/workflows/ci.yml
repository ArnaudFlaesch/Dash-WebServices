# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Gradle CI

on: ["push"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          java-version: "16"
          distribution: "adopt"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Lint
        run: |
          ./gradlew detekt
          ./gradlew ktlintCheck

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Pull mock server
        run: |
          if [[ "$(git ls-remote --heads https://github.com/ArnaudFlaesch/Dash-MockServer ${GITHUB_REF#refs/*/} | wc -l)" == 1 && ${GITHUB_REF#refs/*/} != 'master' ]]; then
            docker run -p 5000:5000 -d ghcr.io/arnaudflaesch/dash-mockserver:${GITHUB_REF#refs/*/}
          else
            docker run -p 5000:5000 -d ghcr.io/arnaudflaesch/dash-mockserver:latest
          fi

      - name: Build with Gradle
        run: ./gradlew clean build -Dspring.profiles.active=test -Dspring.config.location=src/test/resources/application-test.properties

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test report
          path: build/reports/tests/test

      - name: Report coverage
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Kotlin -r build/reports/jacoco/test/jacocoTestReport.xml --project-token ${{ secrets.CODACY_PROJECT_TOKEN }}
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set Docker tag for release
        run: |
          echo "DOCKER_TAG_NAME=latest" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/master'

      - name: Set Docker tag for test
        run: |
          echo "DOCKER_TAG_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/master' && !contains(github.ref, 'renovate/')

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/${{ env.REPO }}:${{env.DOCKER_TAG_NAME}}
          file: ./Dockerfile
